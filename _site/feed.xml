<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
	<channel>
		<title>Andrea D. Blog</title>
		<description>...and definitely It steals the fish.</description>
		<link>/</link>
		<atom:link href="/feed.xml" rel="self" type="application/rss+xml" />
		
			<item>
				<title>How to learn CSS layout</title>
				<description>&lt;p&gt;You surely need to check this website out: &lt;a href=&quot;http://learnlayout.com&quot;&gt;learnlayout.com&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;It’s a great resource created by &lt;a href=&quot;https://github.com/incompl&quot; class=&quot;user-mention&quot;&gt;@incompl&lt;/a&gt; and &lt;a href=&quot;http://www.isaacdurazo.com/&quot;&gt;Isaac Durazo&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2014-04-24-How-to-learn-CSS-layout/learn-layout.com.png&quot; alt=&quot;learncss.com homepage&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;That’s all. Oh yes… and I just traslated it to &lt;a href=&quot;http://it.learnlayout.com/&quot;&gt;italian&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote class=&quot;twitter-tweet&quot; lang=&quot;en&quot;&gt;&lt;p&gt;learnlayout is now available in Italian! &lt;a href=&quot;http://t.co/wSXFaj7hZb&quot;&gt;http://t.co/wSXFaj7hZb&lt;/a&gt;&lt;/p&gt;&amp;mdash; Greg Smith (@_gsmith) &lt;a href=&quot;https://twitter.com/_gsmith/statuses/458679325358063617&quot;&gt;April 22, 2014&lt;/a&gt;&lt;/blockquote&gt;
&lt;script async=&quot;&quot; src=&quot;//platform.twitter.com/widgets.js&quot; charset=&quot;utf-8&quot;&gt;&lt;/script&gt;

&lt;h3 id=&quot;wtf-css-layout---tldr&quot;&gt;wtf css layout - TL;DR&lt;/h3&gt;

&lt;p&gt;When I started studying CSS I remember that the most difficult thing to understand
was figure out how to use those cool selectors and properties to properly
reproduce great page layouts.&lt;/p&gt;

&lt;p&gt;There are several positioning methods you can approach, mastering them surely
would take you much time.&lt;/p&gt;

&lt;p&gt;Tricky names impossible to remember and awful results.&lt;/p&gt;

&lt;p&gt;I clearly remember that I wanted a quick guide, a reference where to learn the CSS
layout, but nothing was there. A guide developers from all over the world could
use and start doing their work: create the layout they need.&lt;/p&gt;

&lt;p&gt;If you are a frontend developer, or if you worked with them before,
you probably would know that:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;position&lt;/strong&gt; has strange values&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;fixed&lt;/strong&gt; really does not fix your problems&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;block&lt;/strong&gt; is the opposit of &lt;strong&gt;inline&lt;/strong&gt;&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;margin&lt;/strong&gt; not always works&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;padding&lt;/strong&gt; and &lt;strong&gt;width&lt;/strong&gt;, they just mess everything up&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;float&lt;/strong&gt; … uh?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;After few years of trying, creating static mockups, jsfiddles, pastebins and tons of
stackoverflow you probably will end up mastering all of them :)&lt;/p&gt;

&lt;p&gt;I think &lt;em&gt;learnlayout.com&lt;/em&gt; is a great resource, I know it will help future developers
to better undestand the CSS and how to properly use it in order to achieve the desired layout.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;learnlayout.com&lt;/em&gt; is straightforward, you can’t ask for better examples or explanation.
Not even MDN is so clear.&lt;/p&gt;

</description>
				<pubDate>Thu, 24 Apr 2014 00:00:00 +0200</pubDate>
				<link>/development/2014/04/24/How-to-learn-CSS-layout.html</link>
				<guid isPermaLink="true">/development/2014/04/24/How-to-learn-CSS-layout.html</guid>
			</item>
		
			<item>
				<title>i-love-markdown.css</title>
				<description>&lt;p&gt;As developer I started with Markdown few years ago, when GitHub started trending.
I’d like to remember the true Markdown father John Gruber and the his &lt;a href=&quot;https://daringfireball.net/projects/markdown/&quot;&gt;Markdown post&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;I started using the Markdown syntax almost for everything and if you aren’t doing so, please you have to.&lt;/p&gt;

&lt;p&gt;It’s a great too, it makes possible to write HTML knowing nothing about that.&lt;/p&gt;

&lt;p&gt;You can use a simple text editor, and most important, it can be “embedded” in whatever website, desktop app or mobile.
Seriously, they should teach it in school.&lt;/p&gt;

&lt;h2 id=&quot;so&quot;&gt;so?&lt;/h2&gt;
&lt;p&gt;More than once I had to create css styles for the html result of markdowns, and you probably know I’m talking about the most important html tags: &lt;code&gt;&amp;lt;h[1-6]&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;p&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;ul|ol&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;blockquote&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;code&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;pre&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;em&amp;gt;&lt;/code&gt;, &lt;code&gt;&amp;lt;a&amp;gt;&lt;/code&gt; and few others.&lt;/p&gt;

&lt;p&gt;Then I thought I would be cool to create a css that would dress up everything like the plain markdown source.&lt;/p&gt;

&lt;h2 id=&quot;check-it-out&quot;&gt;check it out&lt;/h2&gt;
&lt;p&gt;That’s why I created &lt;a href=&quot;http://stealthefish.com/i-love-markdown.css/index.html&quot;&gt;i-love-markdown.css&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2014-04-16-i-love-markdowncss/i-love-markdown.jpg&quot; alt=&quot;i-love-markdown.css homepage&quot; /&gt;&lt;/p&gt;

&lt;p&gt;I started with a simple css then ended up with a less file and a container so it’ll be easy to integrate it with existant websites.&lt;/p&gt;

&lt;p&gt;After I finished I googled a bit for something similar and I discovered many others had my same idea…&lt;/p&gt;

&lt;p&gt;One of my favourites is: &lt;a href=&quot;http://mrcoles.com/demo/markdown-css/&quot;&gt;markdown-css (http://mrcoles.com/demo/markdown-css/)&lt;/a&gt;&lt;/p&gt;
</description>
				<pubDate>Wed, 16 Apr 2014 00:00:00 +0200</pubDate>
				<link>/experiments/css/2014/04/16/i-love-markdowncss.html</link>
				<guid isPermaLink="true">/experiments/css/2014/04/16/i-love-markdowncss.html</guid>
			</item>
		
			<item>
				<title>Improve your GIT prompt</title>
				<description>&lt;p&gt;A &lt;a href=&quot;http://simoneloru.com/&quot;&gt;friend of mine&lt;/a&gt;, during a remote shared video session,
noticied my shell while we were deciding what to commit and what to merge.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2014-04-09-Improve-your-Git-prompt/prompt.png&quot; alt=&quot;Example of my prompt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;http://simoneloru.com&quot;&gt;Simone&lt;/a&gt; told me:&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;Cool, you should write some instructions on how to configure it…&lt;/p&gt;

  &lt;p&gt;I want it too!&lt;/p&gt;
&lt;/blockquote&gt;

&lt;h2 id=&quot;so-heres-how-to-do-it&quot;&gt;so here’s how to do it&lt;/h2&gt;

&lt;p&gt;Some time ago &lt;a href=&quot;https://gist.github.com/NKjoep/4194041&quot;&gt;I wrote a script&lt;/a&gt; for parsing the &lt;code&gt;git status&lt;/code&gt; and return numbers of
modified files and the current branch. Soon I understood it is annoying to maintain
and that there is &lt;a href=&quot;https://github.com/magicmonty/bash-git-prompt&quot;&gt;so much better out there&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&quot;use-bash-git-prompt&quot;&gt;use bash-git-prompt&lt;/h2&gt;
&lt;p&gt;First of all:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~ &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/magicmonty/bash-git-prompt.git .bash-git-prompt &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Than you have to edit the &lt;code&gt;.bash_profile&lt;/code&gt; and add this at the end:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_ONLY_IN_REPO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash-git-prompt/gitprompt.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;&lt;code&gt;.bash_profile&lt;/code&gt; is in your home folder if you are using OSX, otherwise
check for a &lt;code&gt;.bashrc&lt;/code&gt; if you are using linux or unix.&lt;/p&gt;

&lt;p&gt;Doing this you’ll have enabled the cool git prompt with its default setting. Setting the &lt;code&gt;GIT_PROMPT_ONLY_IN_REPO&lt;/code&gt; variable you are preserving the &lt;a href=&quot;http://www.cyberciti.biz/tips/howto-linux-unix-bash-shell-setup-prompt.html&quot;&gt;PS1&lt;/a&gt; when outsite a git folder.&lt;/p&gt;

&lt;h2 id=&quot;customize-it&quot;&gt;customize it&lt;/h2&gt;

&lt;p&gt;However, the default config probably will hurt you, the default settings is something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/posts/2014-04-09-Improve-your-Git-prompt/default-gitprompt.png&quot; alt=&quot;Default bash-git-prompt&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Don’t panic, it’s possible to tweak it a bit. Create a file in your home folder called
&lt;code&gt;.git-prompt-colors.sh&lt;/code&gt;, so:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;touch .git-prompt-colors.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Then you want to write some variables inside it:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_START&lt;/strong&gt;: the start of the prompt&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_END&lt;/strong&gt;: the end of prompt&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_LEADING_SPACE&lt;/strong&gt;: add a space at last&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_PREFIX&lt;/strong&gt;: start of the git info string&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_SUFFIX&lt;/strong&gt;: the end of the git info string&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_SEPARATOR&lt;/strong&gt;: separates each item&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_BRANCH&lt;/strong&gt;: the git branch that is active in the current directory&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_STAGED&lt;/strong&gt;: the number of staged files/directories&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_CONFLICTS&lt;/strong&gt;: the number of files in conflict&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_CHANGED&lt;/strong&gt;: the number of changed files&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_REMOTE&lt;/strong&gt;: the remote branch name (if any)&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_UNTRACKED&lt;/strong&gt;: the number of untracked files/dirs&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_STASHED&lt;/strong&gt;: the number of stashed files/dir&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_CLEAN&lt;/strong&gt;: a colored flag indicating a “clean” repo&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_SYMBOLS_AHEAD&lt;/strong&gt;: indicates when you have commit ahead to push&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_SYMBOLS_BEHIND&lt;/strong&gt;: indicated when you have commit behind to pull&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;GIT_PROMPT_SYMBOLS_PREHASH&lt;/strong&gt;: hash indicator&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Then here’s my config for &lt;code&gt;.git-prompt-color.sh&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;BYellow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[1;33m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;IBlack&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;90m\]&amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;Green&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;\[\033[0;32m\]&amp;quot;&lt;/span&gt;

&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_PREFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${IBlack}(${ResetColor}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# start of the git info string&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_SUFFIX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${IBlack})${ResetColor} &amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the end of the git info string&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_SEPARATOR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${IBlack} ${ResetColor}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# separates each item&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_BRANCH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${IBlack}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the git branch that is active in the current directory&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_STAGED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${Green}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the number of staged files/directories&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_CONFLICTS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${Magenta}✖&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the number of files in conflict&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_CHANGED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${Yellow}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the number of changed files&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_REMOTE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot; &amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the remote branch name (if any)&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_UNTRACKED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${Cyan}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# the number of untracked files/dirs&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_STASHED&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${BoldBlue}&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#⚑  	# the number of stashed files/dir&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_CLEAN&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${IBlack}✔&amp;quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# a colored flag indicating a &amp;quot;clean&amp;quot; repo&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_SYMBOLS_AHEAD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;↑&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_SYMBOLS_BEHIND&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;↓&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_SYMBOLS_PREHASH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&amp;#39;:&amp;#39;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_START&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${ResetColor} &amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_END&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;${ResetColor}${BYellow}\w${ResetColor} ${IBlack}∫${ResetColor} &amp;quot;&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;GIT_PROMPT_LEADING_SPACE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&amp;quot;0&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h2 id=&quot;try-everything&quot;&gt;try everything&lt;/h2&gt;
&lt;p&gt;Logout from the current session and login again, or simply close the terminal and open it again.&lt;/p&gt;

&lt;p&gt;Many uses this command &lt;code&gt;source ~/.bash_profile&lt;/code&gt; but I do not like it. That way you are not cleaning previous loaded environment variables, so seems better to me perform a clean login.&lt;/p&gt;

&lt;h2 id=&quot;stay-updated&quot;&gt;stay updated&lt;/h2&gt;

&lt;p&gt;Having this configuration you can keep updated the bash-git-prompt pulling it from github.
Periodically give a &lt;code&gt;git pull&lt;/code&gt; under &lt;code&gt;~/.bash-git-prompt&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.bash-git-prompt
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git pull
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;h3 id=&quot;enjoy&quot;&gt;enjoy&lt;/h3&gt;

&lt;p&gt;That’s all. enjoy your cool prompt :D&lt;/p&gt;
</description>
				<pubDate>Wed, 09 Apr 2014 00:00:00 +0200</pubDate>
				<link>/development/git/2014/04/09/Improve-your-Git-prompt.html</link>
				<guid isPermaLink="true">/development/git/2014/04/09/Improve-your-Git-prompt.html</guid>
			</item>
		
			<item>
				<title>Start with Jekyll and Github</title>
				<description>&lt;p&gt;I’m a web developer and I follow people, stay update with open source projects
I love &amp;lt;3, I try to fix bugs and sometimes I create them too (oh who doesn’t?).&lt;/p&gt;

&lt;p&gt;I had some blogs. No really. I had more than one, more than once.
Most of them were in my my mind.
You know, You think writing for a blog is easy and, despite everything I’m a developer:
I technically know how to code a blog so I would be cool also to write posts in!&lt;/p&gt;

&lt;p&gt;Yes, I said I had them in my mind because I had never found the right platform for my needs. Fast publishing, great html output, fully customizable, mobile ready…&lt;/p&gt;

&lt;p&gt;My favourite was Posterous, but &lt;a href=&quot;http://www.theverge.com/2013/4/30/4281780/posterous-is-shutting-down-tomorrow-here-are-the-best-alternatives&quot;&gt;Twitter acquired and put them down&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All the alternatives to my old blog were flowing in my mind and after a long time I finally found a good solution. This could be a good solution also for you if:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;you love markdown and git&lt;/li&gt;
  &lt;li&gt;you want great control of everything&lt;/li&gt;
  &lt;li&gt;you don’t want to bother with hostings&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;so get my advice, use &lt;a href=&quot;https://pages.github.com/&quot;&gt;Jekyll + GitHub Pages&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&quot;lets-do-this&quot;&gt;let’s do this&lt;/h2&gt;

&lt;p&gt;The outstanding guide about &lt;strong&gt;Pages&lt;/strong&gt; you find will cover most of common issues, however I’d like to talk you about the some details.&lt;/p&gt;

&lt;p&gt;You need first to have a personal repository &lt;code&gt;&amp;lt;username&amp;gt;.github.io&lt;/code&gt;.
If you have a public domain name, then create a file &lt;code&gt;CNAME&lt;/code&gt; and push it in the root of your github project.&lt;/p&gt;

&lt;h3 id=&quot;jekyll&quot;&gt;jekyll&lt;/h3&gt;

&lt;p&gt;Then move forward to jekyll. The just created repo supports some special files: whenever you push some special &lt;strong&gt;markdown&lt;/strong&gt; automatically they are translated to .html and are available as a static website. Cool right?&lt;/p&gt;

&lt;p&gt;In order to preview your blog locally you need to install jekyll in your machine. It’s python based so make sure you have:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python --version
Python 2.7.5
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;Install Jekyll it:&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;gem install jekyll &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; &amp;lt;username&amp;gt;.github.com &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
jekyll new myblog &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;And you’re ready to run it locally with &lt;code&gt;jekyll serve -w&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;bash&quot;&gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;jekyll serve -w
Configuration file: username.github.io/_config.yml
            Source: username.github.io
       Destination: username.github.io/_site
      Generating... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;.
 Auto-regeneration: enabled
    Server address: http://0.0.0.0:4000
  Server running... press ctrl-c to stop.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;

&lt;p&gt;now open &lt;a href=&quot;http://localhost:4000/&quot;&gt;http://localhost:4000/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Next step is to create markdown files within the &lt;code&gt;_posts&lt;/code&gt; folder.
Rember you can still create plain .html files.
Nothing more to say, follow the &lt;a href=&quot;http://jekyllrb.com/docs/posts/&quot;&gt;official guide&lt;/a&gt;.&lt;/p&gt;

&lt;h3 id=&quot;themes&quot;&gt;themes&lt;/h3&gt;
&lt;p&gt;Generally Jekyll supports themes too, just google around.&lt;/p&gt;

&lt;h2 id=&quot;github&quot;&gt;github&lt;/h2&gt;
&lt;p&gt;You have nothing to do with github, just push the jekyll files to your personal
repository. Rember that if you want to use jekyll with github projects, use branch &lt;em&gt;gh-pages&lt;/em&gt;. You have to enable it per project.&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;So this is my first official post with Jekyll@Github, this configuration gives me soooo much flexibility. That freedom I need while experimenting.&lt;/p&gt;
</description>
				<pubDate>Sat, 05 Apr 2014 00:00:00 +0200</pubDate>
				<link>/blog/2014/04/05/Start-with-Jekyll-and-Github.html</link>
				<guid isPermaLink="true">/blog/2014/04/05/Start-with-Jekyll-and-Github.html</guid>
			</item>
		
	</channel>
</rss>
